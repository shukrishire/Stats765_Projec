# Remove numbers
#emotive words == sentiment ==polarity
#tidyreviews$stemd_test= hunspell_stem(tidyreviews$word)
bing <- get_sentiments("bing")
tidyreviews <- tidyreviews %>%
mutate(polarity_score=  poswords - negwords)
word_count %>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
tidyreviews%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
#3
word_count = tidyreviews %>%
count(word,polarity,sort = TRUE)
ggplot(tidyreviews, aes(deceptive,wordcount)) +geom_boxplot()
#2
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.25)))
tidyreviews %>%
count(word, deceptive,sort = TRUE) %>%
acast(word ~deceptive, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingpositive) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50,colors = "green", scale=c(3.5,0.25)))
wordcount%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
tidyreviews$wordcount%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
tidyreviews$wordcount%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
word_count = tidyreviews %>%
inner_join(bing) %>%
count(word,polarity,sort = TRUE)
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
sum(is.na(tidyreviews))
# Remove NA
#which(is.na(data_frame), arr.ind=TRUE)
which(is.na(tidyreviews),arr.ind = TRUE)
# Remove NA
#which(is.na(data_frame), arr.ind=TRUE)
which(is.na(tidyreviews))
nrow(tidyreviews)
which(is.na(tidyreviews))
names(which(colSums(is.na(tidyreviews))>0))
tidyreviews$negwords %>% replace_na(0)
tidyreviews$polarity_score%>%  replace_na(0)
bing <- get_sentiments("bing")
tidyreviews <- tidyreviews %>%
mutate(polarity_score=  poswords - negwords)
word_count = tidyreviews %>%
inner_join(bing) %>%
count(word,polarity,sort = TRUE)
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
#3
ggplot(tidyreviews, aes(deceptive,wordcount)) +geom_boxplot()
#2
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.25)))
tidyreviews %>%
count(word, deceptive,sort = TRUE) %>%
acast(word ~deceptive, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingpositive) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50,colors = "green", scale=c(3.5,0.25)))
#1
ggplot(tidyreviews,aes(deceptive,polarity_score))+ geom_boxplot()
head(reviews)
reviews2 <- reviews %>%
unite(group, c(deceptive, polarity), remove = F) %>%
mutate(review = row_number())
head(reviews2)
stopwords <- as.list(get_stopwords()
[-c(1,2,3,4,5,6,7,8,58,63,65,67,69,73,75,79),-2])
#exclude personal pronouns - interested to see if fake reviews use less or more
stopwords <- as.data.frame(stopwords)
#remove stopwords
custom_stop_words <- tibble(word = c("hotel", "room", "chicago","chicago's"))
tidyreviews <- reviews2 %>%
unnest_tokens(word, text) %>%
anti_join(stopwords)%>%
anti_join(custom_stop_words)
#negative/positive word count
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
bingpositive <- get_sentiments("bing") %>%
filter(sentiment == "positive")
negwords <- tidyreviews %>%
semi_join(bingnegative, by = "word") %>%
group_by(review) %>%
summarise(negwords = n())
poswords <- tidyreviews %>%
semi_join(bingpositive, by = "word") %>%
group_by(review) %>%
summarise(poswords = n())
tidyreviews <- tidyreviews %>%
left_join(negwords, by = "review") %>%
left_join(poswords, by = "review")
#include word count
tidyreviews <- tidyreviews %>%
group_by(review) %>%
summarize(wordcount = n()) %>%
arrange(desc(wordcount)) %>%
inner_join(tidyreviews,by = "review")
tidyreviews
# Remove NA
#which(is.na(data_frame), arr.ind=TRUE)
names(which(colSums(is.na(tidyreviews))>0))
tidyreviews$negwords %>% replace_na(0)
tidyreviews$poswords %>%  replace_na(0)
#emotive words == sentiment ==polarity
#tidyreviews$stemd_test= hunspell_stem(tidyreviews$word)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyr)
library(tidytext)
library(wordcloud)
library(reshape2)
library(ggplot2)
reviews = read_csv("deceptive-opinion.csv")
dim(reviews)
names(reviews)
head(reviews)
reviews2 <- reviews %>%
unite(group, c(deceptive, polarity), remove = F) %>%
mutate(review = row_number())
head(reviews2)
stopwords <- as.list(get_stopwords()
[-c(1,2,3,4,5,6,7,8,58,63,65,67,69,73,75,79),-2])
#exclude personal pronouns - interested to see if fake reviews use less or more
stopwords <- as.data.frame(stopwords)
#remove stopwords
custom_stop_words <- tibble(word = c("hotel", "room", "chicago","chicago's"))
tidyreviews <- reviews2 %>%
unnest_tokens(word, text) %>%
anti_join(stopwords)%>%
anti_join(custom_stop_words)
#negative/positive word count
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
bingpositive <- get_sentiments("bing") %>%
filter(sentiment == "positive")
negwords <- tidyreviews %>%
semi_join(bingnegative, by = "word") %>%
group_by(review) %>%
summarise(negwords = n())
poswords <- tidyreviews %>%
semi_join(bingpositive, by = "word") %>%
group_by(review) %>%
summarise(poswords = n())
tidyreviews <- tidyreviews %>%
left_join(negwords, by = "review") %>%
left_join(poswords, by = "review")
#include word count
tidyreviews <- tidyreviews %>%
group_by(review) %>%
summarize(wordcount = n()) %>%
arrange(desc(wordcount)) %>%
inner_join(tidyreviews,by = "review")
tidyreviews
# Remove NA
#which(is.na(data_frame), arr.ind=TRUE)
names(which(colSums(is.na(tidyreviews))>0))
tidyreviews$negwords %>% replace_na(0)
tidyreviews$poswords %>%  replace_na(0)
#emotive words == sentiment ==polarity
#tidyreviews$stemd_test= hunspell_stem(tidyreviews$word)
bing <- get_sentiments("bing")
tidyreviews <- tidyreviews %>%
mutate(polarity_score=  poswords - negwords)
word_count = tidyreviews %>%
inner_join(bing) %>%
count(word,polarity,sort = TRUE)
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
#3
ggplot(tidyreviews, aes(deceptive,wordcount)) +geom_boxplot()
#2
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.25)))
tidyreviews %>%
count(word, deceptive,sort = TRUE) %>%
acast(word ~deceptive, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingpositive) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50,colors = "green", scale=c(3.5,0.25)))
#1
ggplot(tidyreviews,aes(deceptive,polarity_score))+ geom_boxplot()
setwd("~/Documents/repos/Stats765_Project/Project_Deceptive")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyr)
library(tidytext)
library(wordcloud)
library(reshape2)
library(ggplot2)
reviews = read_csv("deceptive-opinion.csv")
dim(reviews)
names(reviews)
head(reviews)
reviews2 <- reviews %>%
unite(group, c(deceptive, polarity), remove = F) %>%
mutate(review = row_number())
head(reviews2)
stopwords <- as.list(get_stopwords()
[-c(1,2,3,4,5,6,7,8,58,63,65,67,69,73,75,79),-2])
#exclude personal pronouns - interested to see if fake reviews use less or more
stopwords <- as.data.frame(stopwords)
#remove stopwords
custom_stop_words <- tibble(word = c("hotel", "room", "chicago","chicago's"))
tidyreviews <- reviews2 %>%
unnest_tokens(word, text) %>%
anti_join(stopwords)%>%
anti_join(custom_stop_words)
#negative/positive word count
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
bingpositive <- get_sentiments("bing") %>%
filter(sentiment == "positive")
negwords <- tidyreviews %>%
semi_join(bingnegative, by = "word") %>%
group_by(review) %>%
summarise(negwords = n())
poswords <- tidyreviews %>%
semi_join(bingpositive, by = "word") %>%
group_by(review) %>%
summarise(poswords = n())
tidyreviews <- tidyreviews %>%
left_join(negwords, by = "review") %>%
left_join(poswords, by = "review")
#include word count
tidyreviews <- tidyreviews %>%
group_by(review) %>%
summarize(wordcount = n()) %>%
arrange(desc(wordcount)) %>%
inner_join(tidyreviews,by = "review")
tidyreviews
# Remove NA
#which(is.na(data_frame), arr.ind=TRUE)
names(which(colSums(is.na(tidyreviews))>0))
tidyreviews$negwords %>% replace_na(0)
tidyreviews$poswords %>%  replace_na(0)
#emotive words == sentiment ==polarity
#tidyreviews$stemd_test= hunspell_stem(tidyreviews$word)
bing <- get_sentiments("bing")
tidyreviews <- tidyreviews %>%
mutate(polarity_score=  poswords - negwords)
word_count = tidyreviews %>%
inner_join(bing) %>%
count(word,polarity,sort = TRUE)
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
#3
ggplot(tidyreviews, aes(deceptive,wordcount)) +geom_boxplot()
#2
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.25)))
tidyreviews %>%
count(word, deceptive,sort = TRUE) %>%
acast(word ~deceptive, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingpositive) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50,colors = "green", scale=c(3.5,0.25)))
word_count = tidyreviews %>%
inner_join(bing) %>%
count(word,polarity,sort = TRUE)
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
#3
ggplot(tidyreviews, aes(deceptive,wordcount)) +geom_boxplot()
#2
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.25)))
tidyreviews %>%
count(word, deceptive,sort = TRUE) %>%
acast(word ~deceptive, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingpositive) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50,colors = "green", scale=c(3.5,0.25)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyr)
library(tidytext)
library(wordcloud)
library(reshape2)
library(ggplot2)
reviews = read_csv("deceptive-opinion.csv")
dim(reviews)
names(reviews)
head(reviews)
reviews2 <- reviews %>%
unite(group, c(deceptive, polarity), remove = F) %>%
mutate(review = row_number())
head(reviews2)
stopwords <- as.list(get_stopwords()
[-c(1,2,3,4,5,6,7,8,58,63,65,67,69,73,75,79),-2])
#exclude personal pronouns - interested to see if fake reviews use less or more
stopwords <- as.data.frame(stopwords)
#remove stopwords
custom_stop_words <- tibble(word = c("hotel", "room", "chicago","chicago's"))
tidyreviews <- reviews2 %>%
unnest_tokens(word, text) %>%
anti_join(stopwords)%>%
anti_join(custom_stop_words)
#negative/positive word count
bingnegative <- get_sentiments("bing") %>%
filter(sentiment == "negative")
bingpositive <- get_sentiments("bing") %>%
filter(sentiment == "positive")
negwords <- tidyreviews %>%
semi_join(bingnegative, by = "word") %>%
group_by(review) %>%
summarise(negwords = n())
poswords <- tidyreviews %>%
semi_join(bingpositive, by = "word") %>%
group_by(review) %>%
summarise(poswords = n())
tidyreviews <- tidyreviews %>%
left_join(negwords, by = "review") %>%
left_join(poswords, by = "review")
#include word count
tidyreviews <- tidyreviews %>%
group_by(review) %>%
summarize(wordcount = n()) %>%
arrange(desc(wordcount)) %>%
inner_join(tidyreviews,by = "review")
# Remove NA
names(which(colSums(is.na(tidyreviews))>0))
tidyreviews$negwords %>% replace_na(0)
tidyreviews$poswords %>%  replace_na(0)
head(tidyreviews)
bing <- get_sentiments("bing")
tidyreviews <- tidyreviews %>%
mutate(polarity_score=  poswords - negwords)
word_count = tidyreviews %>%
inner_join(bing) %>%
count(word,polarity,sort = TRUE)
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
#3
ggplot(tidyreviews, aes(deceptive,wordcount)) +geom_boxplot()
#2
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.25)))
tidyreviews %>%
count(word, deceptive,sort = TRUE) %>%
acast(word ~deceptive, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("#F8766D", "#00BFC4"),
max.words = 100)
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingpositive) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50,colors = "green", scale=c(3.5,0.25)))
#1
ggplot(tidyreviews,aes(deceptive,polarity_score))+ geom_boxplot()
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
text(x=0.5, y=0.5, "Title of my first plot") %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
plot.new() %>%
text(x=0.5, y=0.5, "Title of my first plot") %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25)))
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3.5,0.25),title="x"))
tidyreviews %>%
inner_join(bingnegative) %>%
count(word,sort = TRUE) %>%
with(wordcloud(word,n,max.words = 50, colors = "red", scale=c(3,0.5)))
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.5)))
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(3.5,0.75)))
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(4.5,0.75)))
tidyreviews %>%
count(word) %>%
with(wordcloud(word,n,max.words = 50, random.order=F, col=rainbow(50),scale=c(8.5,0.75)))
word_count%>%
filter(n > 50) %>%
mutate(n= ifelse(polarity == "negative",-n,n)) %>%
mutate(word = reorder(word,n)) %>%
ggplot(aes(word,n,fill=polarity))+
geom_col()+
coord_flip()+
labs(y="please work")
